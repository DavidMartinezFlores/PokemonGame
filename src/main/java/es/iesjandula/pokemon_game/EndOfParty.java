/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package es.iesjandula.pokemon_game;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author USUARIO
 */
public class EndOfParty extends javax.swing.JFrame
{

	/** Attribute mainTheme*/
	private Clip mainTheme;
	
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	// End of variables declaration//GEN-END:variables

	/**
	 * Creates new form EndOfParty
	 */
	public EndOfParty(String winner, Icon icon)
	{
		initComponents();
		this.mainTheme = this.getMainTheme();
		if (this.mainTheme != null)
		{
			this.mainTheme.start();
			this.mainTheme.loop(Clip.LOOP_CONTINUOUSLY);
		}
		this.jLabel5.setIcon(new ImageIcon("./images/winnerBack.png"));
		this.jLabel4.setIcon(icon);
		this.jLabel2.setIcon(new ImageIcon("./images/pokeball.png"));
		this.jLabel3.setIcon(new ImageIcon("./images/pokeball.png"));
		this.jLabel1.setText(winner);
		this.rotatePokeballThreadOne();
		this.rotatePokeballThreadTwo();

		this.setResizable(false);
		this.setLocationRelativeTo(null);

		this.buttonsAnimation();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		jLabel1 = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		jLabel1.setBackground(new java.awt.Color(255, 255, 255));
		jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(0, 188, 49));
		jLabel1.setText("jLabel1");
		jLabel1.setOpaque(true);
		getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 74, 445, 73));

		jButton1.setBackground(new java.awt.Color(204, 0, 0));
		jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		jButton1.setForeground(new java.awt.Color(255, 255, 255));
		jButton1.setText("EXIT GAME");
		jButton1.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				jButton1ActionPerformed(evt);
			}
		});
		getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 260, 182, 76));

		jButton2.setBackground(new java.awt.Color(7, 139, 220));
		jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		jButton2.setForeground(new java.awt.Color(255, 255, 255));
		jButton2.setText("RESTART GAME");
		jButton2.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				jButton2ActionPerformed(evt);
			}
		});
		getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 153, 182, 76));

		jLabel2.setText("      ");
		getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 182, 124, 111));

		jLabel3.setText("      ");
		getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 198, 124, 111));
		getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 17, 103, 159));
		getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 380));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * Method jButton1ActionPerformed
	 * @param evt
	 */
	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_jButton1ActionPerformed
		this.dispose();
		System.exit(0);
	}// GEN-LAST:event_jButton1ActionPerformed

	/**
	 * Method jButton2ActionPerformed
	 * @param evt
	 */
	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_jButton2ActionPerformed
		PokemonGameIntro gameIntro = new PokemonGameIntro();
		gameIntro.setVisible(true);
		this.mainTheme.stop();
		this.dispose();
	}// GEN-LAST:event_jButton2ActionPerformed

	/**
	 * Method rotatePokeballThreadOne
	 */
	private void rotatePokeballThreadOne()
	{
		Thread rotatePokebal = new Thread(new Runnable()
		{
			@Override
			public void run()
			{
				int speed = 1;
				while (true)
				{
					for (int i = 0; i < 30; i++)
					{

						jLabel2.setLocation(jLabel2.getX(), jLabel2.getY() + speed);
						try
						{
							Thread.sleep(35);
						}
						catch (InterruptedException ex)
						{
							Logger.getLogger(PlayerVersusPlayer.class.getName()).log(Level.SEVERE, null, ex);
						}
					}
					for (int i = 0; i < 30; i++)
					{

						jLabel2.setLocation(jLabel2.getX(), jLabel2.getY() + (speed * -1));
						try
						{
							Thread.sleep(35);
						}
						catch (InterruptedException ex)
						{
							Logger.getLogger(PlayerVersusPlayer.class.getName()).log(Level.SEVERE, null, ex);
						}
					}
				}
			}
		});
		rotatePokebal.start();
	}

	/**
	 * Method rotatePokeballThreadTwo
	 */
	private void rotatePokeballThreadTwo()
	{
		Thread rotatePokebal = new Thread(new Runnable()
		{
			@Override
			public void run()
			{
				int speed = 1;
				while (true)
				{
					for (int i = 0; i < 30; i++)
					{

						jLabel3.setLocation(jLabel3.getX(), jLabel3.getY() + speed);
						try
						{
							Thread.sleep(35);
						}
						catch (InterruptedException ex)
						{
							Logger.getLogger(PlayerVersusPlayer.class.getName()).log(Level.SEVERE, null, ex);
						}
					}
					for (int i = 0; i < 30; i++)
					{

						jLabel3.setLocation(jLabel3.getX(), jLabel3.getY() + (speed * -1));
						try
						{
							Thread.sleep(35);
						}
						catch (InterruptedException ex)
						{
							Logger.getLogger(PlayerVersusPlayer.class.getName()).log(Level.SEVERE, null, ex);
						}
					}
				}
			}
		});
		rotatePokebal.start();
	}

	/**
	 * Method buttonsAnimation
	 */
	private void buttonsAnimation()
	{
		Thread animation = new Thread(new Runnable()
		{
			@Override
			public void run()
			{
				while (true)
				{
					int speed = 1;
					for (int i = 0; i < 10; i++)
					{
						jButton2.setLocation(jButton2.getX(), jButton2.getY() + speed);
						jButton1.setLocation(jButton1.getX(), jButton1.getY() + speed);
						try
						{
							Thread.sleep(120);
						}
						catch (InterruptedException ex)
						{
							Logger.getLogger(EndOfParty.class.getName()).log(Level.SEVERE, null, ex);
						}
					}
					for (int i = 0; i < 10; i++)
					{
						jButton2.setLocation(jButton2.getX(), jButton2.getY() + (speed * -1));
						jButton1.setLocation(jButton1.getX(), jButton1.getY() + (speed * -1));
						try
						{
							Thread.sleep(120);
						}
						catch (InterruptedException ex)
						{
							Logger.getLogger(EndOfParty.class.getName()).log(Level.SEVERE, null, ex);
						}
					}
				}
			}
		});
		animation.start();
	}

	/**
	 * Method getMainTheme
	 * @return
	 */
	private Clip getMainTheme()
	{
		Clip clip = null;

		try
		{
			AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("./audio/victory.wav"));
			clip = AudioSystem.getClip();
			clip.open(audioInputStream);

		}
		catch (FileNotFoundException ex)
		{
			Logger.getLogger(EndOfParty.class.getName()).log(Level.SEVERE, null, ex);
		}
		catch (UnsupportedAudioFileException ex)
		{
			Logger.getLogger(EndOfParty.class.getName()).log(Level.SEVERE, null, ex);
		}
		catch (IOException ex)
		{
			Logger.getLogger(EndOfParty.class.getName()).log(Level.SEVERE, null, ex);
		}
		catch (LineUnavailableException ex)
		{
			Logger.getLogger(EndOfParty.class.getName()).log(Level.SEVERE, null, ex);
		}

		return clip;
	}
}
